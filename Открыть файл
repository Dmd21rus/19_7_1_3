# 19_7_1_3
3. Код, который я написал для 10 тестов в этом задании.


1. Проверяем добавление питомца без имени, статуса или URL-адреса фотографии (400 Bad Request):
invalid_pet = {'статус': 'доступно'}
ответ = запросы.пост('https://petstore.swagger.io/v2/pet', json=invalid_pet)
утвердить response.status_code == 400


2. Пробуем добавить питомца со слишком ожидаемым именем (400 Bad Request):
invalid_pet = {'name': 'ThisIsAVeryVeryVeryVeryVeryVeryLongNameThatExceedsTheCharacterLimit', 'status': 'доступно', 'photoUrls': []}
ответ = запросы.пост('https://petstore.swagger.io/v2/pet', json=invalid_pet)
утвердить response.status_code == 400


3. Проверяем добавление питомца с недопустимым статусом (400 Bad Request):
invalid_pet = {'name': 'Fluffy', 'status': 'invalid', 'photoUrls': []}
ответ = запросы.пост('https://petstore.swagger.io/v2/pet', json=invalid_pet)
утвердить response.status_code == 400


4. Тестовый поиск питомцев по недопустимому статусу (должен быть возвращен пустой список):
response = request.get('https://petstore.swagger.io/v2/pet/findByStatus', params={'status': 'invalid'})
утверждать response.json() == []


5. Тестируем обновление питомца (404 Not Found):
updated_pet = {'id': 123456789, 'name': 'Fluffy', 'status': 'доступно', 'photoUrls': []}
ответ = запросы.пут('https://petstore.swagger.io/v2/pet', json=updated_pet)
утвердить response.status_code == 404


6. Проверяем обновление питомца с недопустимым идентификатором (400 Bad Request):
updated_pet = {'id': 'invalid_id', 'name': 'Fluffy', 'status': 'доступно', 'photoUrls': []}
ответ = запросы.пут('https://petstore.swagger.io/v2/pet', json=updated_pet)
утвердить response.status_code == 400


7. Проверяем обновление питомца со слишком ожидаемым URL-адресом фотографии (400 Bad Request):
updated_pet = {'id': 1, 'имя': 'Пушистый', 'статус': 'доступно', 'photoUrls': ['https://www.example.com/photo/1', 'https:/ /www.example.com/photo/2», «https://www.example.com/photo/3», «https://www.example.com/photo/4», «https://www .example.com/photo/5», «https://www.example.com/photo/6», «https://www.example.com/photo/7», «https://www.example .com/photo/8», «https://www.example.com/photo/9», «https://www.example.com/photo/10», «https://www.example.com». /фото/11']}
ответ = запросы.пут('https://petstore.swagger.io/v2/pet', json=updated_pet)
утвердить response.status_code == 400


8. Проверяем удаление загрязнения питомца (404 Not Found):
ответ = запросы.удалить('https://petstore.swagger.io/v2/pet/123456789')
утвердить response.status_code == 404


9. Проверяем удаление питомца с неверным идентификатором (400 Bad Request):
ответ = запросы.удалить('https://petstore.swagger.io/v2/pet/invalid_id')
утвердить response.status_code == 400


10. Проверяем добавление нового питомца с повторяющимся идентификатором (409 Conflict):
Duplicate_pet = {'id': 1, 'name': 'Duplicate Pet', 'status': 'доступно', 'photoUrls': []}
ответ = запросы.пост('https://petstore.swagger.io/v2/pet', json=duplicate_pet)
утвердить response.status_code == 409

